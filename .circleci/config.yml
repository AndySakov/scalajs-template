# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2
jobs:
  build-all:
    docker:
      - image: circleci/openjdk:8-jdk-node

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
            - cache-v1-{{ checksum "build.sbt" }}-{{ checksum "project/plugins.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - cache-v1-

      - run: sbt server/test:compile
      - run: sbt web/test:compile
      - run: sbt admin/test:compile

      - save_cache:
          paths:
            - ~/.cache/coursier
            - ~/.ivy2
            - ~/.m2
          key: cache-v1-{{ checksum "build.sbt" }}-{{ checksum "project/plugins.sbt" }}

      # run tests!
      # tests in the jvm are faster
      - run: sbt apiJVM/test

      # package the apps
      - run: sbt server/dist
      - run: sbt web/build
      - run: sbt admin/build

  # server tests require docker to run tests
  # unfortunately, this seems to only work reliably on circleci images
  run-server-tests:
    machine:
      image: ubuntu-2004:202104-01

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - cache-v1-{{ checksum "build.sbt" }}-{{ checksum "project/plugins.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - cache-v1-

      - run: sbt server/test:compile

      - save_cache:
          paths:
            - ~/.cache/coursier
            - ~/.ivy2
            - ~/.m2
          key: cache-v1-{{ checksum "build.sbt" }}-{{ checksum "project/plugins.sbt" }}

      # run tests!
      - run: sbt server/test

workflows:
  version: 2
  build:
    jobs:
      - build-all
      - run-server-tests
